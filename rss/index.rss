<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>xyz</title><description>Thoughts, stories and ideas.</description><link>http://localhost:2368/</link><image><url>http://localhost:2368/favicon.png</url><title>xyz</title><link>http://localhost:2368/</link></image><generator>Ghost 2.14</generator><lastBuildDate>Tue, 05 Mar 2019 08:44:43 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Deploying</title><description>&lt;h1 id="deploying-serverless-with-zeit-now"&gt;Deploying serverless with Zeit Now&lt;/h1&gt;&lt;p&gt;Node/npm will be required on your machine in order to deploy XYZ. Installing node will vary depending on your operating system. npm is required to install the &lt;a href="https://github.com/zeit/now-cli" rel="noopener noreferrer"&gt;Zeit Now CLI&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;With the Zeit Now CLI installed an XYZ instance can be deployed directly from&lt;/p&gt;</description><link>http://localhost:2368/deploying/</link><guid isPermaLink="false">5c641a5c6b69e5015d0104bf</guid><category>Developer Guide</category><dc:creator>Robert Hurst</dc:creator><pubDate>Wed, 13 Feb 2019 13:30:02 GMT</pubDate><content:encoded>&lt;h1 id="deploying-serverless-with-zeit-now"&gt;Deploying serverless with Zeit Now&lt;/h1&gt;&lt;p&gt;Node/npm will be required on your machine in order to deploy XYZ. Installing node will vary depending on your operating system. npm is required to install the &lt;a href="https://github.com/zeit/now-cli" rel="noopener noreferrer"&gt;Zeit Now CLI&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;With the Zeit Now CLI installed an XYZ instance can be deployed directly from the GitHub repository.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;now geolytix/xyz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will deploy the XYZ master branch from the GitHub repository with zero configurations.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="https://blobscdn.gitbook.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-LMms4_qYZAl-8nd6vhU%2F-LPCTfppiSsRRhv-y1qY%2F-LPCVImqStB9mE7HBZJG%2Fxyz%20now%20deploy.gif?alt=media&amp;amp;token=93a731a7-80e9-4ade-b6f4-b0ac269a0b1e" class="kg-image"&gt;&lt;/figure&gt;&lt;p&gt;You can now follow the link from the now deployment output and will see the zero configuration map in your browser.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="https://blobscdn.gitbook.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-LMms4_qYZAl-8nd6vhU%2F-LPCTfppiSsRRhv-y1qY%2F-LPCVfBdDAI6VkSceExL%2Fimage.png?alt=media&amp;amp;token=b513253b-11e8-428d-8f3b-92095e397a0c" class="kg-image"&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href="https://zeit.co/docs/features/env-and-secrets" rel="noopener noreferrer"&gt;Zeit Now environment variables&lt;/a&gt; can be added using the -e option. These environment variables which are available to the Node process allow to configure a custom environment for a deployment.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;now geolytix/xyz 
\-e DIR=&amp;quot;/demo&amp;quot; 
\-e ALIAS=”geolytix.xyz” 
\-e PRIVATE=&amp;quot;postgres://user:@pg.xyz.geolytix.net:5432/xyz|demo.users&amp;quot; 
\-e SECRET=&amp;quot;&amp;quot; 
\-e TRANSPORT=&amp;quot;smtps:xyz%40geolytix.co.uk:@smtp.gmail.com&amp;quot; 
\-e WORKSPACE=&amp;quot;postgres://user:@pg.xyz.geolytix.net:5432/xyz|demo.settings&amp;quot; 
\-e DBS_XYZ=&amp;quot;postgres://user:@pg.xyz.geolytix.net:5432/xyz&amp;quot; 
\-e KEY_MAPBOX=&amp;quot;access_token=..&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="deploying-on-a-ubuntu-server"&gt;Deploying on a Ubuntu server&lt;/h1&gt;&lt;p&gt;For deployments on Ubuntu we use the &lt;a href="https://github.com/Unitech/pm2" rel="noopener noreferrer"&gt;PM2&lt;/a&gt; process manager to run multiple instances of the framework on different ports on the same server. Environment settings for PM2 instances can be provided from a JSON document.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pm2 start myapplication.json
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="deploying-on-aws-elastic-beanstalk-"&gt;Deploying on AWS (Elastic Beanstalk)&lt;/h1&gt;&lt;p&gt;The first requirement will be to become an AWS customer, if you are not already signed up follow the following link to &lt;a href="https://console.aws.amazon.com/elasticbeanstalk" rel="noopener noreferrer"&gt;Sign up&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The next step will be to install the Elastic Beanstalk Command Line Interface (EB CLI). There are different requirments for various operating systems. The following will provide you with an overview specific to your &lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb-cli3-install.html" rel="noopener noreferrer"&gt;environment&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Another requirement before deploying will be to create AWS access keys to your AWS resources. Log into the AWS Console, and seach under find services for 'IAM'.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="https://blobscdn.gitbook.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-LMms4_qYZAl-8nd6vhU%2F-LYCHXCJflUna7gaSjH0%2F-LYCNYV0Q2bkcmanyJQZ%2Fimage.png?alt=media&amp;amp;token=146ec5f2-18a6-4185-8df7-517f94a59d8d" class="kg-image"&gt;&lt;figcaption&gt;&lt;span class="text-4505230f--TextH400-3033861f" style="max-width: 100%;"&gt;Navigating to IAM&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Navigate to the 'Users' and then select 'Add User'&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="https://blobscdn.gitbook.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-LMms4_qYZAl-8nd6vhU%2F-LYCHXCJflUna7gaSjH0%2F-LYCO8D4LX0ZgvlYoAvX%2Fimage.png?alt=media&amp;amp;token=b5b19cba-72a5-4cca-8f1b-fee690468f2e" class="kg-image"&gt;&lt;figcaption&gt;&lt;span class="text-4505230f--TextH400-3033861f" style="max-width: 100%;"&gt;IAM User Creation&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Provide a username and give the user the access type of 'Programmatic access', hit next.&lt;/p&gt;&lt;p&gt;The next step will be to attach a Policy to the User. The Policy that we are going to attach will be the 'AdministratorAccess' . Hit next once complete. Skip the add tags section. And then hit Create User&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="https://blobscdn.gitbook.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-LMms4_qYZAl-8nd6vhU%2F-LYCHXCJflUna7gaSjH0%2F-LYCObxut4G88OFx23fC%2Fimage.png?alt=media&amp;amp;token=05ef689f-428f-4733-9ccf-36940b7ac1dc" class="kg-image"&gt;&lt;figcaption&gt;&lt;span class="text-4505230f--TextH400-3033861f" style="max-width: 100%;"&gt;User Policy Association&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="https://blobscdn.gitbook.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-LMms4_qYZAl-8nd6vhU%2F-LYCHXCJflUna7gaSjH0%2F-LYCOyDKPy00NhQCUeWK%2Fimage.png?alt=media&amp;amp;token=77493130-a4bb-48f6-8a76-c03eb21e4945" class="kg-image"&gt;&lt;figcaption&gt;&lt;span class="text-4505230f--TextH400-3033861f" style="max-width: 100%;"&gt;User Creation&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Once the user is created the Access Key ID and Secret Access Key will be available for use.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="https://blobscdn.gitbook.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-LMms4_qYZAl-8nd6vhU%2F-LYCHXCJflUna7gaSjH0%2F-LYCPANDYQEZ6JZWlecp%2Fimage.png?alt=media&amp;amp;token=587ccde5-5685-4cca-be19-a51fa5e45786" class="kg-image"&gt;&lt;figcaption&gt;&lt;span class="text-4505230f--TextH400-3033861f" style="max-width: 100%;"&gt;User Creation Access Key and Secret Access Key&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Keep these keys on hand, as we will need them later on to configure the CLI.&lt;/p&gt;&lt;p&gt;To ensure that you have installed EB CLI correctly run the following : &lt;code&gt;eb --version&lt;/code&gt;&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="https://blobscdn.gitbook.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-LMms4_qYZAl-8nd6vhU%2F-LYCHXCJflUna7gaSjH0%2F-LYCKVCe52RLamAJb8t2%2Fimage.png?alt=media&amp;amp;token=15b7ce3b-11e9-43c4-8274-c30d20e31357" class="kg-image"&gt;&lt;figcaption&gt;&lt;span class="text-4505230f--TextH400-3033861f" style="max-width: 100%;"&gt;EB CLI Version&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Next navigate to the directory of the XYZ application that is ready for deployment. Once at the root directory we need to initiate a EB CLI configuration. &lt;code&gt;eb init&lt;/code&gt;&lt;/p&gt;&lt;p&gt;The first setting for the deployment will be to select a region, where the application will be deployed. &lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="https://blobscdn.gitbook.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-LMms4_qYZAl-8nd6vhU%2F-LYCHXCJflUna7gaSjH0%2F-LYCMSOtjYXCDxMGX8EH%2Fimage.png?alt=media&amp;amp;token=dcfb96a0-1d53-4ecd-84db-c3b4db6efb79" class="kg-image"&gt;&lt;figcaption&gt;&lt;span class="text-4505230f--TextH400-3033861f" style="max-width: 100%;"&gt;Region Selection&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The next step will be to set the aws-access-id and secret.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="https://blobscdn.gitbook.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-LMms4_qYZAl-8nd6vhU%2F-LYCHXCJflUna7gaSjH0%2F-LYCQ4vSqH2KlUovnbwH%2Fimage.png?alt=media&amp;amp;token=8ef3009b-cda3-492b-a34e-2e8a3e6ef835" class="kg-image"&gt;&lt;figcaption&gt;&lt;span class="text-4505230f--TextH400-3033861f" style="max-width: 100%;"&gt;Security Details&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The Next step will to select a current application or create a new application. The next setting will be to make use of CodeCommit. This will depend on whether or not you make use of this.&lt;/p&gt;&lt;p&gt;The next step will be to create a .ebignore file that will upload only files that are not ignored, similar to a .gitignore. Create this in the root of your application.&lt;/p&gt;&lt;p&gt;Use the following in the .ebignore &lt;/p&gt;&lt;pre&gt;&lt;code&gt;.idea/
.vscode/
.env
.DS_Store
.sass-cache/
.git
node_modules
public/css/.sass-cache/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next step is to define the instance environment properties. These will differ from instance to instance. These settings need to go into a directory called &lt;code&gt;.ebextensions&lt;/code&gt; create a file with the &lt;code&gt;*.config&lt;/code&gt; extension. This file is what AWS will read to create environment properties that are crucial to the XYZ framework. The configuration makes use of YAML.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;option_settings:  
    - option_name: DIR
      value: /test
    - option_name: ALIAS
      value: geolytix.xyz
    - option_name: PRIVATE
      value:
    - option_name: SECRET
      value:   
    - option_name: TRANSPORT
      value:   
    - option_name: WORKSPACE
      value:
    - option_name: DBS_XYZ
      value:
    - option_name: CLOUDINARY
      value:
    - option_name: KEY_GOOGLE
      value:
    - option_name: KEY_HERE
      value:
    - option_name: KEY_MAPBOX
      value:
    - option_name: LOG_LEVEL
      value: info
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt; Once created, we are ready to deploy. To create an instance use the following command :&lt;/p&gt;&lt;p&gt; &lt;code&gt;eb create {name_of_instance}&lt;/code&gt; &lt;/p&gt;&lt;p&gt;If all goes well, then once the process is complete you can open exacly what you just deployed with the command :&lt;/p&gt;&lt;p&gt;&lt;code&gt;eb open&lt;/code&gt;&lt;/p&gt;&lt;p&gt;For future deployments, you would make use of the command :&lt;/p&gt;&lt;p&gt; &lt;code&gt;eb deploy {name_of_instance}&lt;/code&gt;&lt;/p&gt;</content:encoded></item><item><title>License</title><description>&lt;p&gt;&lt;strong&gt;MIT License&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Copyright (c) 2018 GEOLYTIX&lt;/p&gt;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or&lt;/p&gt;</description><link>http://localhost:2368/license/</link><guid isPermaLink="false">5c641a046b69e5015d0104b6</guid><category>Developer Guide</category><dc:creator>Robert Hurst</dc:creator><pubDate>Wed, 13 Feb 2019 13:22:39 GMT</pubDate><content:encoded>&lt;p&gt;&lt;strong&gt;MIT License&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Copyright (c) 2018 GEOLYTIX&lt;/p&gt;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt;&lt;p&gt;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</content:encoded></item><item><title>Introduction</title><description>&lt;p&gt;A &lt;a href="https://nodejs.org/" rel="noopener noreferrer"&gt;Node.js&lt;/a&gt; framework to develop web applications and APIs for spatial data.&lt;/p&gt;&lt;p&gt;Here is a public accessible deployment: &lt;strong&gt;​&lt;/strong&gt;&lt;a href="https://geolytix.xyz/open" rel="noopener noreferrer"&gt;&lt;strong&gt;https://geolytix.xyz/open&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;​&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The XYZ framework is designed to serve spatial data from &lt;a href="https://postgis.net/" rel="noopener noreferrer"&gt;PostGIS&lt;/a&gt; data sources without the need of additional services. The framework is modular with dependencies on third&lt;/p&gt;</description><link>http://localhost:2368/introduction/</link><guid isPermaLink="false">5c640e56442d5d66e2fcfc47</guid><category>Developer Guide</category><dc:creator>Robert Hurst</dc:creator><pubDate>Tue, 12 Feb 2019 12:34:00 GMT</pubDate><content:encoded>&lt;p&gt;A &lt;a href="https://nodejs.org/" rel="noopener noreferrer"&gt;Node.js&lt;/a&gt; framework to develop web applications and APIs for spatial data.&lt;/p&gt;&lt;p&gt;Here is a public accessible deployment: &lt;strong&gt;​&lt;/strong&gt;&lt;a href="https://geolytix.xyz/open" rel="noopener noreferrer"&gt;&lt;strong&gt;https://geolytix.xyz/open&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;​&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The XYZ framework is designed to serve spatial data from &lt;a href="https://postgis.net/" rel="noopener noreferrer"&gt;PostGIS&lt;/a&gt; data sources without the need of additional services. The framework is modular with dependencies on third party open source modules such as the open GIS engine &lt;a href="https://github.com/Turfjs/turf" rel="noopener noreferrer"&gt;Turf&lt;/a&gt;, the &lt;a href="https://github.com/Leaflet/Leaflet" rel="noopener noreferrer"&gt;Leaflet&lt;/a&gt; javascript engine for interactive maps as well as the &lt;a href="https://github.com/josdejong/jsoneditor" rel="noopener noreferrer"&gt;jsoneditor&lt;/a&gt; library used for the modification of JSON workspaces.&lt;/p&gt;&lt;p&gt;XYZ is built with a &lt;a href="https://medium.com/@goldrydigital/a-fine-pfajn-stack-to-put-maps-on-the-web-bf1a531cae93" rel="noopener noreferrer"&gt;PfaJn stack&lt;/a&gt; using &lt;a href="https://www.fastify.io/" rel="noopener noreferrer"&gt;Fastify&lt;/a&gt; as web server and &lt;a href="https://www.jsviews.com/" rel="noopener noreferrer"&gt;JsRender&lt;/a&gt; for server side rendering of views.&lt;/p&gt;&lt;p&gt;The code repository should work out of the box (zero-configuration) as &lt;a href="https://medium.com/@goldrydigital/the-zeit-is-now-for-serverless-web-mapping-77edebfaf17e" rel="noopener noreferrer"&gt;serverless deployments with Zeit Now&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;This documentation is for site administrators as well as developers who would like to contribute to the project. A &lt;a href="https://geolytix.gitbook.io/xyz-user-guide" rel="noopener noreferrer"&gt;&lt;strong&gt;user guide for the XYZ frontend&lt;/strong&gt;&lt;/a&gt; is hosted in a separate GitBook.&lt;/p&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Nomenclature&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The XYZ project consists of a &lt;a href="http://"&gt;&lt;strong&gt;backend&lt;/strong&gt;&lt;/a&gt; and &lt;a href="http://"&gt;&lt;strong&gt;frontend&lt;/strong&gt;&lt;/a&gt; component. The frontend will also be referred to as the &lt;strong&gt;client&lt;/strong&gt; or &lt;strong&gt;browser&lt;/strong&gt; in this documentation. The frontend interface contains a &lt;strong&gt;map control&lt;/strong&gt;. Due to the serverless nature of XYZ deployments, we attempt to ?limit the use of server or serverside when referring to the backend.&lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://"&gt;&lt;strong&gt;Environment Settings&lt;/strong&gt;&lt;/a&gt; define the setup of the backend to serve a &lt;a href="http://"&gt;&lt;strong&gt;client application&lt;/strong&gt;&lt;/a&gt; and API.&lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://"&gt;Workspaces&lt;/a&gt; are a set of instructions which define the use of data as layers and locations to be used by the client application and API.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;An &lt;a href="http://"&gt;object &lt;strong&gt;entry&lt;/strong&gt;&lt;/a&gt; is a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON"&gt;JSON&lt;/a&gt; key/value pair. The &lt;strong&gt;key&lt;/strong&gt; being the identifier to look up an entry and retrieve its value. A key must have a &lt;strong&gt;value&lt;/strong&gt; associated. Key and value are separated by a colon. Keys must be a string. Values may be a string, numeric, boolean, an array or&lt;br&gt;
objects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://"&gt;&lt;strong&gt;Locales&lt;/strong&gt;&lt;/a&gt; are a collection of regional bounds, gazetteer and layers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://"&gt;&lt;strong&gt;Layers&lt;/strong&gt;&lt;/a&gt; are data tables which can be displayed and interacted with.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://"&gt;&lt;strong&gt;Locations&lt;/strong&gt;&lt;/a&gt; are features in data tables which can be selected and interacted with.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://"&gt;&lt;strong&gt;Deployment&lt;/strong&gt;&lt;/a&gt; is act of deploying code from the repository to run as an XYZ instance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://"&gt;&lt;strong&gt;Endpoints&lt;/strong&gt;&lt;/a&gt; (also &lt;a href="http://"&gt;&lt;strong&gt;routes&lt;/strong&gt;&lt;/a&gt;) make up the XYZ application interface. Distinct endpoints can be used to request data and edit data or make changes to the application settings themselves. The domain route (root /) will request the client interface (frontend) which links a graphic user interface and map control to backend endpoints.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://"&gt;&lt;strong&gt;Token&lt;/strong&gt;&lt;/a&gt; (also &lt;strong&gt;acccess token&lt;/strong&gt;) is a signed JSON Web Token used to transmit information about a user account from the client to the XYZ backend.&lt;/p&gt;
&lt;/blockquote&gt;
</content:encoded></item></channel></rss>